
-- drop tables
-- CREATE OR REPLACE PROCEDURE DropTable(TableName varchar2)
-- IS
--   v_counter number := 0;
-- begin
--   select count(*) into v_counter from user_tables where table_name = upper(TableName);
--   if v_counter > 0 then
--     execute immediate 'drop table ' || TableName || ' cascade constraints purge';
--   end if;
-- end;
--
-- EXECUTE DropTable("DIGITAL_OBJECTS");

DROP TABLE "DIGITAL_OBJECTS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "DPN_OBJECTS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "DPN_REPLICAS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "REPLICAS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "SDR_OBJECTS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "SDR_OBJECT_VERSIONS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "SDR_VERSION_STATS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "TAPE_ARCHIVES" CASCADE CONSTRAINTS PURGE;
DROP TABLE "TAPE_REPLICAS" CASCADE CONSTRAINTS PURGE;
DROP VIEW "NEW_REPLICAS" CASCADE CONSTRAINTS;

DROP TABLE "SCHEMA_MIGRATIONS" CASCADE CONSTRAINTS PURGE;

-- rails schema migrations

CREATE TABLE "SCHEMA_MIGRATIONS" (
"VERSION" VARCHAR2(255 CHAR) NOT NULL
);
CREATE UNIQUE INDEX "UNIQUE_SCHEMA_MIGRATIONS" ON "SCHEMA_MIGRATIONS" ("VERSION");
  ALTER INDEX "UNIQUE_SCHEMA_MIGRATIONS" NOPARALLEL;



-- sequences
DROP SEQUENCE "DATASTREAMPATHS_S1";
DROP SEQUENCE "DIGITAL_OBJECTS_SEQ";
DROP SEQUENCE "DPN_OBJECTS_SEQ";
DROP SEQUENCE "DPN_REPLICAS_SEQ";
DROP SEQUENCE "OBJECTPATHS_S1";

CREATE SEQUENCE "DATASTREAMPATHS_S1";
CREATE SEQUENCE "DIGITAL_OBJECTS_SEQ";
CREATE SEQUENCE "DPN_OBJECTS_SEQ";
CREATE SEQUENCE "DPN_REPLICAS_SEQ";
CREATE SEQUENCE "OBJECTPATHS_S1";

-- tables and constraints

CREATE TABLE "DIGITAL_OBJECTS" (
  "DIGITAL_OBJECT_ID" NUMBER(38,0) NOT NULL,
  "HOME_REPOSITORY" VARCHAR2(3 CHAR) NOT NULL,
  CONSTRAINT "DIGITAL_OBJECTS_PK" PRIMARY KEY ("DIGITAL_OBJECT_ID")
);

CREATE TABLE "DPN_OBJECTS" (
  "DPN_OBJECT_ID" NUMBER(38,0) NOT NULL,
  CONSTRAINT "DPN_OBJECTS_PK" PRIMARY KEY ("DPN_OBJECT_ID")
);

CREATE TABLE "DPN_REPLICAS" (
  "REPLICA_ID" NUMBER(38,0) NOT NULL,
  "DPN_OBJECT_ID" VARCHAR2(40 CHAR) NOT NULL,
  "SUBMIT_DATE" TIMESTAMP(6) NOT NULL,
  "ACCEPT_DATE" TIMESTAMP(6) NOT NULL,
  "VERIFY_DATE" TIMESTAMP(6),
  CONSTRAINT "DPN_REPLICAS_PK" PRIMARY KEY ("REPLICA_ID")
);

-- TODO: Do we need a primary key on this table?
-- TODO: Can we allow duplicates, that might have different fixity?
CREATE TABLE "REPLICAS" (
  "REPLICA_ID" VARCHAR2(40 CHAR) NOT NULL,
  "HOME_REPOSITORY" VARCHAR2(3 CHAR) NOT NULL,
  "CREATE_DATE" TIMESTAMP(6) NOT NULL,
  "PAYLOAD_FIXITY_TYPE" VARCHAR2(7 CHAR) NOT NULL,
  "PAYLOAD_FIXITY" VARCHAR2(64 CHAR) NOT NULL,
  "PAYLOAD_SIZE" NUMBER(38,0) NOT NULL
);

CREATE TABLE "SDR_OBJECTS" (
  "SDR_OBJECT_ID" VARCHAR2(17 CHAR) NOT NULL,
  "OBJECT_TYPE" VARCHAR2(20 CHAR) NOT NULL,
  "GOVERNING_OBJECT" VARCHAR2(17 CHAR),
  "OBJECT_LABEL" VARCHAR2(100 CHAR),
  "LATEST_VERSION" NUMBER(*,0),
  CONSTRAINT "SDR_OBJECTS_PK" PRIMARY KEY ("SDR_OBJECT_ID")
);
ALTER INDEX "SDR_OBJECTS_PK" NOPARALLEL;


CREATE TABLE "SDR_OBJECT_VERSIONS" (
  "SDR_OBJECT_ID" VARCHAR2(17 CHAR) NOT NULL,
  "SDR_VERSION_ID" NUMBER(*,0) NOT NULL,
  "INGEST_DATE" TIMESTAMP(6) WITH TIME ZONE,
  "REPLICA_ID" VARCHAR2(23 CHAR),
  CONSTRAINT "SDR_OBJECT_VERSIONS_PK" PRIMARY KEY ("SDR_OBJECT_ID", "SDR_VERSION_ID")
);
ALTER INDEX "SDR_OBJECT_VERSIONS_PK" NOPARALLEL;


CREATE TABLE "SDR_VERSION_STATS" (
  "SDR_OBJECT_ID" VARCHAR2(17 CHAR) NOT NULL,
  "SDR_VERSION_ID" NUMBER(*,0) NOT NULL,
  "INVENTORY_TYPE" VARCHAR2(5 CHAR) NOT NULL,
  "CONTENT_FILES" NUMBER(*,0) NOT NULL,
  "CONTENT_BLOCKS" NUMBER(*,0) NOT NULL,
  "CONTENT_BYTES" NUMBER(*,0) NOT NULL,
  "METADATA_FILES" NUMBER(*,0) NOT NULL,
  "METADATA_BLOCKS" NUMBER(*,0) NOT NULL,
  "METADATA_BYTES" NUMBER(*,0) NOT NULL,
  CONSTRAINT "SDR_VERSION_STATS_PK" PRIMARY KEY ("SDR_OBJECT_ID", "SDR_VERSION_ID", "INVENTORY_TYPE")
);
ALTER INDEX "SDR_VERSION_STATS_PK" NOPARALLEL;
ALTER TABLE "SDR_VERSION_STATS" ADD CONSTRAINT "SDR_VERSION_STATS_PK"
  PRIMARY KEY ("SDR_OBJECT_ID", "SDR_VERSION_ID", "INVENTORY_TYPE") ENABLE;
ALTER TABLE "SDR_VERSION_STATS" ADD CONSTRAINT "SDR_VERSION_STATS_SDR_OBJ_FK1"
  FOREIGN KEY ("SDR_OBJECT_ID", "SDR_VERSION_ID")
  REFERENCES "SDR_OBJECT_VERSIONS"("SDR_OBJECT_ID", "SDR_VERSION_ID") ENABLE;


CREATE TABLE "TAPE_ARCHIVES" (
  "TAPE_ARCHIVE_ID" VARCHAR2(32 CHAR) NOT NULL,
  "TAPE_SERVER" VARCHAR2(32 CHAR) NOT NULL,
  "TAPE_NODE" VARCHAR2(32 CHAR) NOT NULL,
  "SUBMIT_DATE" TIMESTAMP(6) WITH TIME ZONE DEFAULT NULL  NOT NULL,
  "ACCEPT_DATE" TIMESTAMP(6) WITH TIME ZONE,
  "VERIFY_DATE" TIMESTAMP(6) WITH TIME ZONE,
  CONSTRAINT "TAPE_ARCHIVE_SET_PK" PRIMARY KEY ("TAPE_ARCHIVE_ID")
);
ALTER INDEX "TAPE_ARCHIVE_SET_PK" NOPARALLEL;


CREATE TABLE "TAPE_REPLICAS" (
  "REPLICA_ID" VARCHAR2(40 CHAR) NOT NULL,
  "TAPE_ARCHIVE_ID" VARCHAR2(32 CHAR) NOT NULL,
  CONSTRAINT "TAPE_REPLICAS_PK" PRIMARY KEY ("REPLICA_ID", "TAPE_ARCHIVE_ID")
);
ALTER INDEX "TAPE_REPLICAS_PK" NOPARALLEL;




-- rake db:structure:dump did not get this view

CREATE OR REPLACE FORCE VIEW "NEW_REPLICAS" ("REPLICA_ID", "HOME_REPOSITORY", "CREATE_DATE", "PAYLOAD_SIZE", "PAYLOAD_FIXITY_TYPE", "PAYLOAD_FIXITY") AS
  SELECT  r.replica_id , r.home_repository, r.create_date , r.payload_size, r.payload_fixity_type,  r.payload_fixity
  FROM replicas r LEFT JOIN tape_replicas t on r.replica_id = t.replica_id
  WHERE t.tape_archive_id is null;


COMMIT;

